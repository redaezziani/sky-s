
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password: 'password',
  role: 'role',
  isActive: 'isActive',
  isEmailVerified: 'isEmailVerified',
  emailVerificationToken: 'emailVerificationToken',
  emailVerificationExpires: 'emailVerificationExpires',
  passwordResetToken: 'passwordResetToken',
  passwordResetExpires: 'passwordResetExpires',
  lastLoginAt: 'lastLoginAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.RefreshTokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  userId: 'userId',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  info: 'info',
  parentId: 'parentId',
  isActive: 'isActive',
  sortOrder: 'sortOrder',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  shortDesc: 'shortDesc',
  coverImage: 'coverImage',
  isActive: 'isActive',
  isFeatured: 'isFeatured',
  metaTitle: 'metaTitle',
  metaDesc: 'metaDesc',
  sortOrder: 'sortOrder',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.ProductVariantScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  name: 'name',
  attributes: 'attributes',
  isActive: 'isActive',
  sortOrder: 'sortOrder',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.ProductSKUScalarFieldEnum = {
  id: 'id',
  variantId: 'variantId',
  sku: 'sku',
  barcode: 'barcode',
  price: 'price',
  comparePrice: 'comparePrice',
  costPrice: 'costPrice',
  stock: 'stock',
  lowStockAlert: 'lowStockAlert',
  weight: 'weight',
  dimensions: 'dimensions',
  coverImage: 'coverImage',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.ProductSKUImageScalarFieldEnum = {
  id: 'id',
  skuId: 'skuId',
  url: 'url',
  fileId: 'fileId',
  altText: 'altText',
  position: 'position',
  createdAt: 'createdAt'
};

exports.Prisma.ProductReviewScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  userId: 'userId',
  rating: 'rating',
  title: 'title',
  comment: 'comment',
  isApproved: 'isApproved',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CartItemScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  skuId: 'skuId',
  quantity: 'quantity',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  orderNumber: 'orderNumber',
  userId: 'userId',
  status: 'status',
  paymentStatus: 'paymentStatus',
  subtotal: 'subtotal',
  taxAmount: 'taxAmount',
  shippingAmount: 'shippingAmount',
  discountAmount: 'discountAmount',
  totalAmount: 'totalAmount',
  currency: 'currency',
  invoiceUrl: 'invoiceUrl',
  invoiceFileId: 'invoiceFileId',
  shippingName: 'shippingName',
  shippingEmail: 'shippingEmail',
  shippingPhone: 'shippingPhone',
  shippingAddress: 'shippingAddress',
  deliveryLat: 'deliveryLat',
  deliveryLng: 'deliveryLng',
  deliveryPlace: 'deliveryPlace',
  billingName: 'billingName',
  billingEmail: 'billingEmail',
  billingAddress: 'billingAddress',
  notes: 'notes',
  trackingNumber: 'trackingNumber',
  shippedAt: 'shippedAt',
  deliveredAt: 'deliveredAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  skuId: 'skuId',
  quantity: 'quantity',
  unitPrice: 'unitPrice',
  totalPrice: 'totalPrice',
  productName: 'productName',
  skuCode: 'skuCode',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InventoryMovementScalarFieldEnum = {
  id: 'id',
  skuId: 'skuId',
  type: 'type',
  quantity: 'quantity',
  reason: 'reason',
  reference: 'reference',
  previousStock: 'previousStock',
  newStock: 'newStock',
  createdAt: 'createdAt'
};

exports.Prisma.PriceHistoryScalarFieldEnum = {
  id: 'id',
  skuId: 'skuId',
  oldPrice: 'oldPrice',
  newPrice: 'newPrice',
  reason: 'reason',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.UserRole = exports.$Enums.UserRole = {
  USER: 'USER',
  ADMIN: 'ADMIN',
  MODERATOR: 'MODERATOR'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  PENDING: 'PENDING',
  CONFIRMED: 'CONFIRMED',
  PROCESSING: 'PROCESSING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED',
  REFUNDED: 'REFUNDED'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED'
};

exports.Prisma.ModelName = {
  User: 'User',
  RefreshToken: 'RefreshToken',
  Category: 'Category',
  Product: 'Product',
  ProductVariant: 'ProductVariant',
  ProductSKU: 'ProductSKU',
  ProductSKUImage: 'ProductSKUImage',
  ProductReview: 'ProductReview',
  CartItem: 'CartItem',
  Order: 'Order',
  OrderItem: 'OrderItem',
  InventoryMovement: 'InventoryMovement',
  PriceHistory: 'PriceHistory'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/klaus/sky-s/backend/prisma/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/klaus/sky-s/backend/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"./generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum UserRole {\n  USER\n  ADMIN\n  MODERATOR\n}\n\nenum OrderStatus {\n  PENDING\n  CONFIRMED\n  PROCESSING\n  SHIPPED\n  DELIVERED\n  CANCELLED\n  REFUNDED\n}\n\nenum PaymentStatus {\n  PENDING\n  COMPLETED\n  FAILED\n  REFUNDED\n}\n\nmodel User {\n  id                       String    @id @default(uuid())\n  email                    String    @unique @db.VarChar(255)\n  name                     String?   @db.VarChar(100)\n  password                 String    @db.VarChar(255)\n  role                     UserRole  @default(USER)\n  isActive                 Boolean   @default(true)\n  isEmailVerified          Boolean   @default(false)\n  emailVerificationToken   String?   @db.VarChar(255)\n  emailVerificationExpires DateTime?\n  passwordResetToken       String?   @db.VarChar(255)\n  passwordResetExpires     DateTime?\n  lastLoginAt              DateTime?\n  createdAt                DateTime  @default(now())\n  updatedAt                DateTime  @updatedAt\n  deletedAt                DateTime?\n\n  // Relations\n  refreshTokens RefreshToken[]\n  orders        Order[]\n  reviews       ProductReview[]\n  cartItems     CartItem[]\n\n  @@index([email])\n  @@index([isActive])\n  @@index([role])\n  @@index([createdAt])\n}\n\nmodel RefreshToken {\n  id        String   @id @default(uuid())\n  token     String   @unique @db.VarChar(500)\n  userId    String\n  expiresAt DateTime\n  createdAt DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([token])\n  @@index([expiresAt])\n}\n\nmodel Category {\n  id          String    @id @default(uuid())\n  name        String    @db.VarChar(100)\n  slug        String    @unique @db.VarChar(120)\n  description String?   @db.Text\n  info        Json?\n  parentId    String?\n  isActive    Boolean   @default(true)\n  sortOrder   Int       @default(0)\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  deletedAt   DateTime?\n\n  // Relations\n  parent   Category?  @relation(\"CategoryHierarchy\", fields: [parentId], references: [id])\n  children Category[] @relation(\"CategoryHierarchy\")\n  products Product[]  @relation(\"ProductCategories\")\n\n  @@index([slug])\n  @@index([parentId])\n  @@index([isActive])\n  @@index([sortOrder])\n}\n\nmodel Product {\n  id          String    @id @default(uuid())\n  name        String    @db.VarChar(200)\n  slug        String    @unique @db.VarChar(220)\n  description String?   @db.Text\n  shortDesc   String?   @db.VarChar(500)\n  coverImage  String?   @db.VarChar(500)\n  isActive    Boolean   @default(true)\n  isFeatured  Boolean   @default(false)\n  metaTitle   String?   @db.VarChar(200)\n  metaDesc    String?   @db.VarChar(500)\n  sortOrder   Int       @default(0)\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  deletedAt   DateTime?\n\n  // Relations\n  variants   ProductVariant[]\n  categories Category[]       @relation(\"ProductCategories\")\n  reviews    ProductReview[]\n\n  @@index([slug])\n  @@index([isActive])\n  @@index([isFeatured])\n  @@index([sortOrder])\n  @@index([createdAt])\n}\n\nmodel ProductVariant {\n  id         String    @id @default(uuid())\n  productId  String\n  name       String?   @db.VarChar(100) // e.g., \"Large - Red\"\n  attributes Json? // {\"size\": \"Large\", \"color\": \"Red\", \"material\": \"Cotton\"}\n  isActive   Boolean   @default(true)\n  sortOrder  Int       @default(0)\n  createdAt  DateTime  @default(now())\n  updatedAt  DateTime  @updatedAt\n  deletedAt  DateTime?\n\n  // Relations\n  product Product      @relation(fields: [productId], references: [id], onDelete: Cascade)\n  skus    ProductSKU[]\n\n  @@index([productId])\n  @@index([isActive])\n  @@index([sortOrder])\n}\n\nmodel ProductSKU {\n  id            String    @id @default(uuid())\n  variantId     String\n  sku           String    @unique @db.VarChar(100)\n  barcode       String?   @unique @db.VarChar(100)\n  price         Decimal   @db.Decimal(10, 2)\n  comparePrice  Decimal?  @db.Decimal(10, 2) // Original price for discounts\n  costPrice     Decimal?  @db.Decimal(10, 2) // Cost for profit calculation\n  stock         Int       @default(0)\n  lowStockAlert Int       @default(5)\n  weight        Decimal?  @db.Decimal(8, 2) // in grams\n  dimensions    Json? // {\"length\": 10, \"width\": 5, \"height\": 2}\n  coverImage    String?   @db.VarChar(500)\n  isActive      Boolean   @default(true)\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n  deletedAt     DateTime?\n\n  // Relations\n  variant            ProductVariant      @relation(fields: [variantId], references: [id], onDelete: Cascade)\n  images             ProductSKUImage[]\n  cartItems          CartItem[]\n  orderItems         OrderItem[]\n  inventoryMovements InventoryMovement[]\n  priceHistory       PriceHistory[]\n\n  @@index([sku])\n  @@index([barcode])\n  @@index([variantId])\n  @@index([price])\n  @@index([stock])\n  @@index([isActive])\n}\n\nmodel ProductSKUImage {\n  id        String   @id @default(uuid())\n  skuId     String\n  url       String   @db.VarChar(500)\n  fileId    String?  @default(\"\") @db.VarChar(200) // store ImageKit fileId here\n  altText   String?  @db.VarChar(200)\n  position  Int      @default(0)\n  createdAt DateTime @default(now())\n\n  sku ProductSKU @relation(fields: [skuId], references: [id], onDelete: Cascade)\n\n  @@index([skuId])\n  @@index([position])\n}\n\nmodel ProductReview {\n  id         String   @id @default(uuid())\n  productId  String\n  userId     String\n  rating     Int // 1-5 stars\n  title      String?  @db.VarChar(200)\n  comment    String?  @db.Text\n  isApproved Boolean  @default(false)\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n\n  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)\n  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([productId, userId]) // One review per user per product\n  @@index([productId])\n  @@index([userId])\n  @@index([rating])\n  @@index([isApproved])\n}\n\nmodel CartItem {\n  id        String   @id @default(uuid())\n  userId    String\n  skuId     String\n  quantity  Int\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  user User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n  sku  ProductSKU @relation(fields: [skuId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, skuId]) // One cart item per user per SKU\n  @@index([userId])\n  @@index([skuId])\n}\n\nmodel Order {\n  id             String        @id @default(uuid())\n  orderNumber    String        @unique @db.VarChar(50)\n  userId         String\n  status         OrderStatus   @default(PENDING)\n  paymentStatus  PaymentStatus @default(PENDING)\n  subtotal       Decimal       @db.Decimal(10, 2)\n  taxAmount      Decimal       @default(0) @db.Decimal(10, 2)\n  shippingAmount Decimal       @default(0) @db.Decimal(10, 2)\n  discountAmount Decimal       @default(0) @db.Decimal(10, 2)\n  totalAmount    Decimal       @db.Decimal(10, 2)\n  currency       String        @default(\"USD\") @db.VarChar(3)\n\n  // pdf invoice url\n  invoiceUrl      String? @default(\"\") @db.VarChar(500)\n  invoiceFileId   String? @default(\"\") @db.VarChar(200) // store ImageKit fileId here\n  // Shipping Information\n  shippingName    String  @db.VarChar(100)\n  shippingEmail   String  @db.VarChar(255)\n  shippingPhone   String? @db.VarChar(20)\n  shippingAddress Json // Full address object\n\n  // Delivery Coordinates\n  deliveryLat   Float?\n  deliveryLng   Float?\n  deliveryPlace String?\n\n  // Billing Information\n  billingName    String? @db.VarChar(100)\n  billingEmail   String? @db.VarChar(255)\n  billingAddress Json? // Full address object\n\n  notes          String?   @db.Text\n  trackingNumber String?   @db.VarChar(100)\n  shippedAt      DateTime?\n  deliveredAt    DateTime?\n  createdAt      DateTime  @default(now())\n  updatedAt      DateTime  @updatedAt\n\n  user  User        @relation(fields: [userId], references: [id])\n  items OrderItem[]\n\n  @@index([orderNumber])\n  @@index([userId])\n  @@index([status])\n  @@index([paymentStatus])\n  @@index([createdAt])\n}\n\nmodel OrderItem {\n  id          String  @id @default(uuid())\n  orderId     String\n  skuId       String\n  quantity    Int\n  unitPrice   Decimal @db.Decimal(10, 2)\n  totalPrice  Decimal @db.Decimal(10, 2)\n  productName String  @db.VarChar(200) // Snapshot for historical data\n  skuCode     String  @db.VarChar(100) // Snapshot for historical data\n\n  order     Order      @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  sku       ProductSKU @relation(fields: [skuId], references: [id])\n  createdAt DateTime   @default(now())\n  updatedAt DateTime   @default(now()) @updatedAt\n\n  @@index([orderId])\n  @@index([skuId])\n}\n\nmodel InventoryMovement {\n  id            String   @id @default(uuid())\n  skuId         String\n  type          String   @db.VarChar(20) // IN, OUT, ADJUSTMENT, RESERVED, UNRESERVED\n  quantity      Int // Positive for IN, negative for OUT\n  reason        String?  @db.VarChar(200)\n  reference     String?  @db.VarChar(100) // Order ID, etc.\n  previousStock Int\n  newStock      Int\n  createdAt     DateTime @default(now())\n\n  sku ProductSKU @relation(fields: [skuId], references: [id])\n\n  @@index([skuId])\n  @@index([type])\n  @@index([createdAt])\n}\n\nmodel PriceHistory {\n  id        String   @id @default(uuid())\n  skuId     String\n  oldPrice  Decimal  @db.Decimal(10, 2)\n  newPrice  Decimal  @db.Decimal(10, 2)\n  reason    String?  @db.VarChar(200)\n  createdAt DateTime @default(now())\n\n  sku ProductSKU @relation(fields: [skuId], references: [id])\n\n  @@index([skuId])\n  @@index([createdAt])\n}\n",
  "inlineSchemaHash": "1adf5c22d182b0b52ad2e3b605bed974f3e1cca33caec5d48dfa3475f22c8d01",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isEmailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emailVerificationToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerificationExpires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"passwordResetToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordResetExpires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastLoginAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokens\",\"kind\":\"object\",\"type\":\"RefreshToken\",\"relationName\":\"RefreshTokenToUser\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToUser\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"ProductReview\",\"relationName\":\"ProductReviewToUser\"},{\"name\":\"cartItems\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartItemToUser\"}],\"dbName\":null},\"RefreshToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RefreshTokenToUser\"}],\"dbName\":null},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"info\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryHierarchy\"},{\"name\":\"children\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryHierarchy\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductCategories\"}],\"dbName\":null},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shortDesc\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"coverImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isFeatured\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"metaTitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metaDesc\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"variants\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"ProductToProductVariant\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"ProductCategories\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"ProductReview\",\"relationName\":\"ProductToProductReview\"}],\"dbName\":null},\"ProductVariant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attributes\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductVariant\"},{\"name\":\"skus\",\"kind\":\"object\",\"type\":\"ProductSKU\",\"relationName\":\"ProductSKUToProductVariant\"}],\"dbName\":null},\"ProductSKU\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"barcode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"comparePrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"costPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lowStockAlert\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"weight\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"dimensions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"coverImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"variant\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"ProductSKUToProductVariant\"},{\"name\":\"images\",\"kind\":\"object\",\"type\":\"ProductSKUImage\",\"relationName\":\"ProductSKUToProductSKUImage\"},{\"name\":\"cartItems\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartItemToProductSKU\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToProductSKU\"},{\"name\":\"inventoryMovements\",\"kind\":\"object\",\"type\":\"InventoryMovement\",\"relationName\":\"InventoryMovementToProductSKU\"},{\"name\":\"priceHistory\",\"kind\":\"object\",\"type\":\"PriceHistory\",\"relationName\":\"PriceHistoryToProductSKU\"}],\"dbName\":null},\"ProductSKUImage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skuId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"altText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sku\",\"kind\":\"object\",\"type\":\"ProductSKU\",\"relationName\":\"ProductSKUToProductSKUImage\"}],\"dbName\":null},\"ProductReview\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isApproved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductReview\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProductReviewToUser\"}],\"dbName\":null},\"CartItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skuId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CartItemToUser\"},{\"name\":\"sku\",\"kind\":\"object\",\"type\":\"ProductSKU\",\"relationName\":\"CartItemToProductSKU\"}],\"dbName\":null},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"paymentStatus\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"subtotal\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"taxAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"shippingAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"discountAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoiceUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoiceFileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippingName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippingEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippingPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippingAddress\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"deliveryLat\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"deliveryLng\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"deliveryPlace\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"billingName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"billingEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"billingAddress\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trackingNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderToUser\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderToOrderItem\"}],\"dbName\":null},\"OrderItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skuId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"productName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skuCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"sku\",\"kind\":\"object\",\"type\":\"ProductSKU\",\"relationName\":\"OrderItemToProductSKU\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"InventoryMovement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skuId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"previousStock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"newStock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sku\",\"kind\":\"object\",\"type\":\"ProductSKU\",\"relationName\":\"InventoryMovementToProductSKU\"}],\"dbName\":null},\"PriceHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skuId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oldPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"newPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sku\",\"kind\":\"object\",\"type\":\"ProductSKU\",\"relationName\":\"PriceHistoryToProductSKU\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

