version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sky-s-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: sky_s_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - sky-s-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d sky_s_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: dockerFile   # your backend Dockerfile
    container_name: sky-s-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/sky_s_db
      JWT_SECRET: your-super-secret-jwt-key
      JWT_REFRESH_SECRET: your-super-secret-refresh-key
      MAIN_APP_PORT: 8080
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - sky-s-network
    command: ["node", "dist/main.js"]

volumes:
  postgres_data:
    driver: local

networks:
  sky-s-network:
    driver: bridge
